services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health.txt"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app_network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - MAX_WORKERS=4
      - CORS_ORIGINS=["http://localhost", "https://simulation.aaryareddy.com", "http://simulation.aaryareddy.com"]
      - UVICORN_WORKERS=4
      - UVICORN_WS_PING_INTERVAL=20
      - UVICORN_WS_PING_TIMEOUT=20
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '2G'
    restart: unless-stopped
    networks:
      - app_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
