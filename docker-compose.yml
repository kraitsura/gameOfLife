services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - frontend_build:/usr/share/nginx/html/simulation
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:8000
    volumes:
      - frontend_build:/app/dist
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "bun --version > /dev/null && test -d /app/dist || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - CORS_ORIGINS=http://frontend:3000,http://localhost
    volumes:
      - ./server:/app
      - /app/venv
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  frontend_build:
