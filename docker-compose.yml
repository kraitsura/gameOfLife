services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/simulation/api
      - VITE_WS_URL=/simulation/ws
      - VITE_BASE_URL=/simulation
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - CORS_ORIGINS=https://aaryareddy.com,http://localhost:3000,http://localhost:8000,http://localhost
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - DEBUG=false
      - MAX_WORKERS=4
    volumes:
      - ./server:/app/server
      - /app/venv
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge
    internal: true

